/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day006tempconverter;

import javax.swing.JOptionPane;

/**
 *
 * @author phili
 */
public class Day006TempConverter extends javax.swing.JFrame {

    public void recalculate() {
        //reset the text in lblInputStatus
        lblInputStatus.setText("");
        
        
        //get the input string
        String inputText = tfInput.getText();

        if (inputText.isEmpty()) {
            return;
        }

        //validate the inputText and parse it to a double value
        try {
            double inputDouble = Double.parseDouble(inputText);//NumberFormatException

            //get the inputScale and OutputScale, determine the surffix
            String inputScale = btnGrpInputScale.getSelection().getActionCommand();
            String outputScale = btnGrpOutputScale.getSelection().getActionCommand();

            //get the surffix
            String sf;
            switch (outputScale.toUpperCase()) {
                case "CEL":
                    sf =  "\u00B0C";
                    break;
                case "FAH":
                    sf = "\u00B0F";
                    break;
                case "KEV":
                    sf = "\u00B0K";
                    break;
                default:
                    sf = "";
                    break;
            }

            //get the inputScale and OutputScale, determine the  the output double
            double outputDouble = 0;

            switch ((inputScale + outputScale).toUpperCase()) {

                case "CELFAH":
                    outputDouble = inputDouble * 9 / 5 + 32;
                    break;
                case "CELKEV":
                    outputDouble = inputDouble + 273.15;
                    break;
                case "FAHCEL":
                    outputDouble = (inputDouble - 32) * 5 / 9;
                    break;
                case "FAHKEV":
                    outputDouble = (inputDouble - 32) * 5 / 9 + 273.15;
                    break;
                case "KEVFAH":
                    outputDouble = (inputDouble - 273.15) * 9 / 5 + 32;
                    break;
                case "KEVCEL":
                    outputDouble = inputDouble - 273.15;
                    break;

                default:// while inputScale.equals(outputScale)
                    outputDouble = inputDouble;
                    break;
            }

            String outputText = String.format("%.2f", outputDouble) + " "+sf;
            //display the result on the label lblOuput
            lblOutput.setText(outputText);
        } catch (NumberFormatException e) {
            lblInputStatus.setText("Pls input a number");
            tfInput.requestFocusInWindow();
            lblOutput.setText("Input Error");
        }
    }

    /**
     * Creates new form Day006TempConverter
     */
    public Day006TempConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpInputScale = new javax.swing.ButtonGroup();
        btnGrpOutputScale = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tfInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbInputScaleCel = new javax.swing.JRadioButton();
        rbInputScaleFah = new javax.swing.JRadioButton();
        rbInputScaleKel = new javax.swing.JRadioButton();
        rbOutputScaleKel = new javax.swing.JRadioButton();
        rbOutputScaleFah = new javax.swing.JRadioButton();
        rbOutputScaleCel = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        lblInputStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperature Converter");
        setResizable(false);

        jLabel1.setText("Input");

        tfInput.setText("0");
        tfInput.setToolTipText("input a number");
        tfInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfInputKeyReleased(evt);
            }
        });

        jLabel2.setText("Input Scale");

        jLabel3.setText("Output Scale");

        btnGrpInputScale.add(rbInputScaleCel);
        rbInputScaleCel.setSelected(true);
        rbInputScaleCel.setText("Celcius");
        rbInputScaleCel.setActionCommand("CEL");
        rbInputScaleCel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        btnGrpInputScale.add(rbInputScaleFah);
        rbInputScaleFah.setText("Fahrenheit");
        rbInputScaleFah.setActionCommand("FAH");
        rbInputScaleFah.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        btnGrpInputScale.add(rbInputScaleKel);
        rbInputScaleKel.setText("Kevin");
        rbInputScaleKel.setActionCommand("KEV");
        rbInputScaleKel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        btnGrpOutputScale.add(rbOutputScaleKel);
        rbOutputScaleKel.setText("Kevin");
        rbOutputScaleKel.setActionCommand("KEV");
        rbOutputScaleKel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        btnGrpOutputScale.add(rbOutputScaleFah);
        rbOutputScaleFah.setSelected(true);
        rbOutputScaleFah.setText("Fahrenheit");
        rbOutputScaleFah.setActionCommand("FAH");
        rbOutputScaleFah.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        btnGrpOutputScale.add(rbOutputScaleCel);
        rbOutputScaleCel.setText("Celcius");
        rbOutputScaleCel.setActionCommand("CEL");
        rbOutputScaleCel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOutputScaleFahItemStateChanged(evt);
            }
        });

        jLabel4.setText("Output");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbInputScaleCel)
                                    .addComponent(rbInputScaleKel)
                                    .addComponent(rbInputScaleFah))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbOutputScaleCel)
                                    .addComponent(rbOutputScaleKel)
                                    .addComponent(rbOutputScaleFah)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGap(86, 86, 86))))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOutput))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInputStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputStatus))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbInputScaleCel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbInputScaleFah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbInputScaleKel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbOutputScaleCel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbOutputScaleFah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbOutputScaleKel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblOutput))
                .addGap(78, 78, 78))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbOutputScaleFahItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbOutputScaleFahItemStateChanged
        // TODO add your handling code here:
        recalculate();
    }//GEN-LAST:event_rbOutputScaleFahItemStateChanged

    private void tfInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfInputKeyReleased
        // TODO add your handling code here:
        recalculate();
    }//GEN-LAST:event_tfInputKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day006TempConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day006TempConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day006TempConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day006TempConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day006TempConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrpInputScale;
    private javax.swing.ButtonGroup btnGrpOutputScale;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblInputStatus;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JRadioButton rbInputScaleCel;
    private javax.swing.JRadioButton rbInputScaleFah;
    private javax.swing.JRadioButton rbInputScaleKel;
    private javax.swing.JRadioButton rbOutputScaleCel;
    private javax.swing.JRadioButton rbOutputScaleFah;
    private javax.swing.JRadioButton rbOutputScaleKel;
    private javax.swing.JTextField tfInput;
    // End of variables declaration//GEN-END:variables
}
