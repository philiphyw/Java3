/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day007validateinput;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.StringJoiner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author phili
 */
public class Day007ValidateInput extends javax.swing.JFrame {

    DefaultListModel<String> dataStringModel = new DefaultListModel<>();
    
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");// MM:month, mm:minutes
    
    
    public Day007ValidateInput() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpGenders = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfPassport = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboContinent = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        rbGendersMale = new javax.swing.JRadioButton();
        rbGendersOther = new javax.swing.JRadioButton();
        rbGendersFemale = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        cbFish = new javax.swing.JCheckBox();
        cbOther = new javax.swing.JCheckBox();
        cbPig = new javax.swing.JCheckBox();
        sliderHeight = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        lblHeightCM = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfDOB = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstData = new javax.swing.JList<>();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(480, 720));
        setResizable(false);

        jLabel1.setText("Name");

        jLabel2.setText("Passport NO#");

        jLabel3.setText("Continent");

        comboContinent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose...", "Asia", "Africa", "Europe", "North America", "South America" }));

        jLabel4.setText("Gender");

        btnGrpGenders.add(rbGendersMale);
        rbGendersMale.setText("Male");

        btnGrpGenders.add(rbGendersOther);
        rbGendersOther.setSelected(true);
        rbGendersOther.setText("Other");

        btnGrpGenders.add(rbGendersFemale);
        rbGendersFemale.setText("Female");

        jLabel5.setText("Pets");

        cbFish.setText("Fish");

        cbOther.setText("Other");

        cbPig.setText("Pig");

        sliderHeight.setMajorTickSpacing(50);
        sliderHeight.setMaximum(250);
        sliderHeight.setMinimum(100);
        sliderHeight.setMinorTickSpacing(25);
        sliderHeight.setPaintLabels(true);
        sliderHeight.setPaintTicks(true);
        sliderHeight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sliderHeightMouseReleased(evt);
            }
        });

        jLabel6.setText("Height ");

        jLabel7.setText("Date of birth");

        tfDOB.setText("yyyy-mm-dd");

        btAdd.setText("Verify and Add below");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        lstData.setModel(dataStringModel);
        jScrollPane1.setViewportView(lstData);

        lblStatus.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblHeightCM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(tfPassport, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                .addComponent(comboContinent, 0, 150, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rbGendersMale)
                                                    .addComponent(cbFish))
                                                .addGap(34, 34, 34)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(rbGendersFemale)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rbGendersOther))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(cbPig)
                                                        .addGap(44, 44, 44)
                                                        .addComponent(cbOther))))
                                            .addComponent(tfDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPassport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboContinent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbGendersMale)
                    .addComponent(rbGendersOther)
                    .addComponent(rbGendersFemale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbFish)
                        .addComponent(cbOther)
                        .addComponent(cbPig)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(lblHeightCM))
                    .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tfDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblStatus)
                .addGap(23, 23, 23)
                .addComponent(btAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        
        //Initialize the StringJoiner for dataString
        StringJoiner sj = new StringJoiner(";");//no space
        
        
        //check name and join value
        //name requirement 1 - 50 characters contains uppercase, lowercase, space, minus
        String name = tfName.getText();
        if (!name.matches("^[a-zA-Z \\-]{1,50}$")) {
            lblStatus.setText("name must be 1 - 50 characters contains uppercase, lowercase, space, minus");
            return;
        }
        sj.add(name);

        //check passwort NO# and join value
        //name requirement 1 - 50 characters contains uppercase, lowercase, space, minus
        String passport = tfPassport.getText();
        if (!passport.matches("^[a-zA-Z][a-zA-Z][0-9][0-9][0-9][0-9][0-9][0-9]$")) {
            lblStatus.setText("passport muast be in format AB123456");
            return;
        }
        passport = passport.toUpperCase();
        sj.add(passport);
        lblStatus.setText("");

        //check passwort NO# and join value
        //contient must be chosed, can NOT be the value "Please choose..."
        String continent = comboContinent.getSelectedItem().toString();
        if (continent.equals("Please choose...")) {
            lblStatus.setText("please select the continent from the list");
            return;
        }
        sj.add(continent);
        lblStatus.setText("");

        //add gender. the value "other" is selected by default
        
        rbGendersMale.setActionCommand("Male");
         rbGendersFemale.setActionCommand("Female");
          rbGendersOther.setActionCommand("Other");
     
        String selectedGender = btnGrpGenders.getSelection().getActionCommand();
        sj.add(selectedGender);

        //add pets. allow to be null, just notify user on the lblSatus
        ArrayList<String> petList = new ArrayList<>();

        if (cbFish.isSelected()) {
            petList.add(cbFish.getActionCommand());
        }
        if (cbPig.isSelected()) {
            petList.add(cbPig.getActionCommand());
        }
        if (cbOther.isSelected()) {
            petList.add(cbOther.getActionCommand());
        }
        
        StringJoiner petJoiner = new StringJoiner(",");//no space
        
        if (petList.size()>0) {
            petList.forEach(p -> petJoiner.add(p));
        }
        String pets = petJoiner.toString();
        sj.add(pets);
        
        //check height and join value
        String height = String.valueOf(sliderHeight.getValue());
  
        /*
        JOptionPane.showMessageDialog(this, height);
        lblHeightCM.setText(height + " cm");
        sj.add(height);
        */
        
        
         //check date of birth and join value
         String DOB = tfDOB.getText();
         if (DOB == null || DOB.isEmpty()) {
            lblStatus.setText("Please input the date of birth.");
            return;
        }
         
         try{
            Date date = df.parse(DOB);
           
            //verify if the date of birth is before current date
            Calendar calCur = Calendar.getInstance();
            Date curDate = new Date();
            calCur.getTime();
            
            
            Calendar calDob = Calendar.getInstance();
            calDob.setTime(date);
            if(calDob.after(calCur)){
               lblStatus.setText("The date of birth must be today or before .");
               return;
            }
            
            
             String dateStr = df.format(date);
             sj.add(dateStr);
            
         }catch(ParseException e){
              lblStatus.setText("Incorrect date format, please re-enter");
            return;
         }
         
         
         
         String dataString = sj.toString();
         dataStringModel.addElement(dataString);
         
        
    }//GEN-LAST:event_btAddActionPerformed

    private void sliderHeightMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderHeightMouseReleased
        // TODO add your handling code here:
        String height = String.valueOf(sliderHeight.getValue());
        lblHeightCM.setText(height + " cm");
    }//GEN-LAST:event_sliderHeightMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day007ValidateInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day007ValidateInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day007ValidateInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day007ValidateInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day007ValidateInput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.ButtonGroup btnGrpGenders;
    private javax.swing.JCheckBox cbFish;
    private javax.swing.JCheckBox cbOther;
    private javax.swing.JCheckBox cbPig;
    private javax.swing.JComboBox<String> comboContinent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeightCM;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList<String> lstData;
    private javax.swing.JRadioButton rbGendersFemale;
    private javax.swing.JRadioButton rbGendersMale;
    private javax.swing.JRadioButton rbGendersOther;
    private javax.swing.JSlider sliderHeight;
    private javax.swing.JTextField tfDOB;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPassport;
    // End of variables declaration//GEN-END:variables
}
