package day002todos;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

/**
 *
 * @author phili
 */
public class Day002Todos {

    static ArrayList<Todo> todoList = new ArrayList<>();
    static Scanner input = new Scanner(System.in);

    //The function the validate if use input is a integer
    static int getInputInt(){
        Scanner input = new Scanner(System.in);
        int intInput = -999;
        while (true) {
            try { 
                intInput = input.nextInt();
                break;
                
            } catch (NumberFormatException | InputMismatchException e) {
               
                System.out.println("Please input a valid integer");
                String invalidIntInput = input.next();
                 
                continue;
            }
            
        }
        return intInput;
    }

    //Main menu
    static void showMenu() {
        System.out.println("\nPlease make a choice [0 - 4]");
        System.out.println("1. Add a todo");
        System.out.println("2. List all todos");
        System.out.println("3. Delete a todo (numbered)");
        System.out.println("4. Modify a todo");
        System.out.println("0. Exit");
        System.out.print("Your choice is: ");
    }

    //1. Add a todo
    static void addATodo() throws InvalidDataException {
        System.out.println("Adding a todo.");

        try {
            System.out.print("Enter new task description: ");
            String task = input.nextLine();

            System.out.print("Enter new due Date (yyyy/mm/dd): ");
            String dueDate = input.nextLine();

            System.out.print("Enter new hours of work (integer): ");
            int hoursOfWork = input.nextInt();

            Todo newTodo = new Todo(task, dueDate, hoursOfWork);
            //add the new todo object to the todoList
            todoList.add(newTodo);

            System.out.printf("You've created the following todo\n");
            System.out.println(todoList.get(todoList.size() - 1).toString());

            //to aviod the empty line (\n) which was generated by previous nextLine command, use one more .nextLine() to consume the empty line
            input.nextLine();
        } catch (IndexOutOfBoundsException e) {
            throw new InvalidDataException("The todo number does not exist");
        }
    }

    //2. List all todos
    static void listAllTodos() throws InvalidDataException {
        if (todoList.isEmpty()) {
            throw new InvalidDataException("There are no todos");
        } else {
            System.out.println("List all todos.");
            for (int i = 0; i < todoList.size(); i++) {
                System.out.printf("#%d: %s", i + 1, todoList.get(i).toString());
            }
        }
    }

    //3. Delete a todo 
    static void deleteATodo() throws InvalidDataException {
        if (todoList.isEmpty()) {
            throw new InvalidDataException("There are no todos");
        } else {
            System.out.print("Deleting a todo. Which todo# would you like to delete? ");

            //String userInput = input.nextLine();
            int parsedUserInput = getInputInt();

            try {
                todoList.remove(parsedUserInput - 1);
                System.out.printf("\nDeleted todo %d successfully.\n", parsedUserInput);
                //to aviod the empty line (\n) which was generated by previous nextLine command, use one more .nextLine() to consume the empty line
                input.nextLine();

            } catch (IndexOutOfBoundsException e) {
                throw new InvalidDataException("The todo number does not exist");
            }
        }
    }

    //4. Modify a todo         
    static void modifyATodo() throws InvalidDataException {
        if (todoList.isEmpty()) {
            throw new InvalidDataException("There are no todos");
        } else {
            System.out.print("Modifying a todo. Which todo# would you like to modify? ");
            //String userInput = input.nextLine();
            int todoNum = getInputInt();

            if (todoNum > todoList.size()) {
                throw new InvalidDataException("The todo you've chosen does not exist, please check");
            }

            try {
                System.out.print("Enter new task description: ");
                String task = input.nextLine();

                System.out.print("Enter new due Date (yyyy/mm/dd): ");
                String dueDate = input.nextLine();

                System.out.print("Enter new hours of work (integer): ");
                int hoursOfWork = input.nextInt();
                
                //to aviod the empty line (\n) which was generated by previous nextLine command, use one more .nextLine() to consume the empty line
                input.nextLine();
                System.out.print("Enter if task is 'Done' or 'Pending': ");
                String status = input.nextLine();

                Todo modfiedToto = new Todo(task, dueDate, hoursOfWork, status);
                todoList.set(todoNum - 1, modfiedToto);

                System.out.printf("You've modified todo %d as follows:\n", todoNum);
                System.out.println(todoList.get(todoNum - 1).toString());


            } catch (IndexOutOfBoundsException e) {
                throw new InvalidDataException("The todo number does not exist");
            }
        }
    }

    static void loadDataFromFile() throws InvalidDataException {
        try (Scanner fileReader = new Scanner(new File("todos.txt"))) {
            while (fileReader.hasNextLine()) {
                todoList.add(new Todo(fileReader.nextLine()));
            }
        } catch (IOException | InvalidDataException e) {
            System.out.println(e.getMessage());
        }

    }

    static void saveDataToFile() {
        try (PrintWriter pw = new PrintWriter(new File("todos.txt"))) {
            if (todoList.size() > 0) {
                for (Todo todo : todoList) {
                    pw.println(todo.toDataString());
                }
            }
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }

    }

    public static void main(String[] args) {

        boolean exitProgram = false;
        try {
            loadDataFromFile();
        } catch (InvalidDataException e) {
            System.out.println(e.getMessage());
        }

        while (exitProgram == false) {
            //diesplay the menu
            showMenu();

            try {

                // Validate the user's input, to handle empty input or string input, use nextLine to receive the value, validate it, then parse to int
                //String userInput = input.nextLine();

                int parsedUserInput = getInputInt();

                if (parsedUserInput < 0 || parsedUserInput > 4) {
                    throw new InvalidDataException("Please input your choice between 0 - 4");
                }

                //Call different method basing on userInput
                switch (parsedUserInput) {
                    case 0:
                        exitProgram = true;
                        System.out.println("Exiting. Good bye!");
                        saveDataToFile();
                        break;
                    case 1:
                        addATodo();
                        break;
                    case 2:
                        listAllTodos();
                        break;
                    case 3:
                        deleteATodo();
                        break;
                    case 4:
                        modifyATodo();
                        break;
                    default:
                        break;

                }
            } catch (InvalidDataException e) {
                System.out.println(e.getMessage());
            }

        }

    }

}
